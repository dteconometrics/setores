as_tibble()
## Sem Ajuste Sazonal
names <- c("date", "Indústria geral", "Indústria de transformação", "produtos alimentícios", "Fabricação de bebidas", "Celulose, Papel e produtos de Papel", "Coque, derivados de petróleo e biocombustíveis", "Borracha e material Plástico", "Metalurgia", "metal, exceto máquinas e equipamentos", "Aparelhos e Materiais elétricos", "Veículos Automotores, Reboques e Carrocerias", "Outros Equipamentos de Transporte, Exceto Veículos Automotores")
pim_atv = get_sidra(api = '/t/8888/n3/26/v/12606/p/all/c544/129314,129316,129317,129318,129324,129326,129331,129333,129334,129336,129338,129339/d/v12606%205') %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(date, "Seções e atividades industriais (CNAE 2.0)", Valor) %>%
spread("Seções e atividades industriais (CNAE 2.0)", Valor) %>%
drop_na() %>%
`names<-`(names) %>%
as_tibble()
# Calculando Metricas PE ------------------
## Variação na Margem
pim_atv_ts = ts(pim_atv_sa[,-1], start = c(year(pim_atv_sa$date[1]),
month(pim_atv_sa$date[1])), frequency = 12)
margem_atv = (pim_atv_ts/stats::lag(pim_atv_ts,-1)-1)*100
colnames(margem_atv) <- colnames(pim_atv_sa[,-1])
margem_atv = tk_tbl(margem_atv, preserve_index = TRUE,
rename_index = 'date')
margem_long_atv = margem_atv %>%
gather(variavel, valor, -date)
## Variaççao Interanual
atv_ts = ts(pim_atv[,-1], start = c(year(pim_atv$date[1]),
month(pim_atv$date[1])), frequency = 12)
interanual_atv = (atv_ts/stats::lag(atv_ts,-12)-1)*100
colnames(interanual_atv) <- colnames(pim_atv[,-1])
interanual_atv = tk_tbl(interanual_atv, preserve_index = TRUE,
rename_index = 'date')
interanual_long_atv = interanual_atv %>%
gather(variavel, valor, -date)
## Variação Acumulada em 12 Meses
anual_atv = acum_i(atv_ts,12)
# Pesquisa Industrial Mensal
names <- c('date', 'receita', 'volume', 'receita_sa', 'volume_sa')
foot_ibge <- "Fonte: ADEPE com dados do IBGE"
## Coleta e Tratamento Nível Brasil---------------------
## Com Ajuste Sazonal
pim_sa = '/t/8888/n1/all/v/12607/p/last%20182/c544/all/d/v12607%205' %>%
sidrar::get_sidra(api=.) %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(date, "Seções e atividades industriais (CNAE 2.0)", Valor) %>%
spread("Seções e atividades industriais (CNAE 2.0)", Valor) %>%
as_tibble()
## Sem Ajuste Sazonal
pim = get_sidra(api='/t/8888/n1/all/v/12606/p/last%20182/c544/all/d/v12606%205') %>%
mutate(date = parse_date(`Mês (Código)`, format='%Y%m')) %>%
dplyr::select(date, "Seções e atividades industriais (CNAE 2.0)", Valor) %>%
spread("Seções e atividades industriais (CNAE 2.0)", Valor) %>%
as_tibble()
## Transformação em ST
pim_sa_ts = ts(pim_sa[,-1], start = c(year(pim_sa$date[1]),
month(pim_sa$date[1])), frequency = 12)
## Variação na Margem Brasil -------------
margem = (pim_sa_ts/stats::lag(pim_sa_ts,-1)-1)*100
colnames(margem) <- colnames(pim_sa[,-1])
margem = tk_tbl(margem, preserve_index = TRUE,
rename_index = 'date')
## Formato Long
margem_long = margem %>%
gather(variavel, valor, -date)
## Variaão Interanual Brasil ------------------------
pim_ts = ts(pim[,-1], start = c(year(pim$date[1]),
month(pim$date[1])), frequency = 12)
interanual = (pim_ts/stats::lag(pim_ts,-12)-1)*100
colnames(interanual) <- colnames(pim[,-1])
interanual = tk_tbl(interanual, preserve_index = TRUE,
rename_index = 'date')
interanual_long = interanual %>%
gather(variavel, valor, -date)
## Variação acumulada em 12 meses Brasil ------
anual = acum_i(pim_ts,12) %>%
as_tibble() %>%
mutate(date = pim$date) %>%
drop_na() %>%
dplyr::select(date, everything())
anual_long = anual %>%
gather(variavel, valor, -date)
## Nivel Pe e Nordeste ------------------
## Coleta e Tratamento dos Dados ------------------
names <- c("date", "pim_sa_pe")
## Produção Industrial índice e SA
pim_pe_sa = '/t/8888/n3/26/v/12607/p/all/c544/129314/d/v12607%205' %>%
sidrar::get_sidra(api=.) %>%
mutate(date = parse_date(`Mês (Código)`, format = "%Y%m")) %>%
dplyr::select(date, "Seções e atividades industriais (CNAE 2.0) (Código)", Valor) %>%
spread("Seções e atividades industriais (CNAE 2.0) (Código)", Valor) %>%
`colnames<-`(names) %>%
as_tibble() %>%
drop_na()
pim_pe = '/t/8888/n3/26/v/12606/p/all/c544/129314/d/v12606%205' %>%
sidrar::get_sidra(api=.) %>%
mutate(date = parse_date(`Mês (Código)`, format = "%Y%m")) %>%
dplyr::select(date,"Seções e atividades industriais (CNAE 2.0) (Código)", Valor) %>%
spread("Seções e atividades industriais (CNAE 2.0) (Código)", Valor) %>%
`colnames<-`(c('date', 'pim_pe'))
## Produção Ceara Sa e indice
pim_ce_sa = '/t/8888/n3/23/v/12607/p/all/c544/129314/d/v12607%205' %>%
sidrar::get_sidra(api=.) %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(date,"Seções e atividades industriais (CNAE 2.0) (Código)", Valor) %>%
spread("Seções e atividades industriais (CNAE 2.0) (Código)", Valor) %>%
`colnames<-`(c('date',"pim_ce_sa")) %>%
as_tibble() %>%
drop_na()
pim_ce = '/t/8888/n3/23/v/12606/p/all/c544/129314/d/v12606%205' %>%
sidrar::get_sidra(api=.) %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(date,"Seções e atividades industriais (CNAE 2.0) (Código)", Valor) %>%
spread("Seções e atividades industriais (CNAE 2.0) (Código)", Valor) %>%
`colnames<-`(c('date', 'pim_ce')) %>%
as_tibble() %>%
drop_na()
## Produção Bahia SA e Indice
pim_ba_sa = '/t/8888/n3/29/v/12607/p/all/c544/129314/d/v12607%205' %>%
sidrar::get_sidra(api=.) %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(date,"Seções e atividades industriais (CNAE 2.0) (Código)", Valor) %>%
spread("Seções e atividades industriais (CNAE 2.0) (Código)", Valor) %>%
`colnames<-`(c('date', 'pim_ba_sa')) %>%
as_tibble() %>%
drop_na()
pim_ba = '/t/8888/n3/29/v/12606/p/all/c544/129314/d/v12606%205'  %>%
sidrar::get_sidra(api=.) %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(date,"Seções e atividades industriais (CNAE 2.0) (Código)", Valor) %>%
spread("Seções e atividades industriais (CNAE 2.0) (Código)", Valor) %>%
`colnames<-`(c('date', 'pim_ba')) %>%
as_tibble() %>%
drop_na()
## Nível Nordeeste
names_2 <- c('date', 'pim_ne')
pim_ne_sa = '/t/8888/n2/all/v/12607/p/all/c544/129314/d/v12607%205' %>%
get_sidra(api =.) %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(date, "Seções e atividades industriais (CNAE 2.0) (Código)", Valor) %>%
spread("Seções e atividades industriais (CNAE 2.0) (Código)", Valor) %>%
`colnames<-`(c('date', 'pim_ne_sa')) %>%
as_tibble()
pim_ne = '/t/8888/n2/all/v/12606/p/all/c544/56689,129314,129315,129316,129317,129318,129324,129326,129331,129332,129333,129334,129336,129338,129339/d/v12606%205' %>%
get_sidra(api = .) %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(date, "Seções e atividades industriais (CNAE 2.0) (Código)", Valor) %>%
spread("Seções e atividades industriais (CNAE 2.0) (Código)", Valor) %>%
`colnames<-`(names_2) %>%
dplyr::select(date, pim_ne) %>%
as_tibble()
## Juntando os dados
dados_sa = pim_pe_sa %>%
inner_join(pim_ce_sa, by = 'date') %>%
inner_join(pim_ba_sa, by= 'date') %>%
inner_join(pim_ne_sa, by = 'date')
dados = pim_pe %>%
inner_join(pim_ce, by = 'date') %>%
inner_join(pim_ba, by = 'date') %>%
inner_join(pim_ne, by = 'date')
## Transformando em St --------------
## Variação na Margem de nordeste
dados_sa_ts = ts(dados_sa[,-1], start = c(year(dados_sa$date[1]),
month(dados_sa$date[1])), frequency = 12)
## Varição na Margem -----------
margem_data = (dados_sa_ts/stats::lag(dados_sa_ts,-1)-1)*100
colnames(margem_data) <- colnames(dados_sa[,-1])
margem_data = tk_tbl(margem_data, preserve_index = TRUE,
rename_index = 'date')
## Formato Long
margem_data_long = margem_data %>%
gather(variavel, valor, -date)
## Variação Interanual -----------------------
dados_ts = ts(dados[,-1], start = c(year(dados$date[1]),
month(dados$date[1])), frequency = 12)
interanual_data = (dados_ts/stats::lag(dados_ts, -12)-1)*100
colnames(interanual_data) <- colnames(dados[,-1])
interanual_data = tk_tbl(interanual_data, preserve_index = TRUE,
rename_index = 'date')
interanual_data_long = interanual_data %>%
gather(variavel, valor, -date)
## Variação Acumulada em 12 Meses ------------
anual_data = acum_i(dados_ts,12) %>%
as_tibble() %>%
mutate(date = dados$date) %>%
drop_na() %>%
dplyr::select(date, everything())
anual_data_long = anual_data %>%
gather(variavel, valor, -date)
## PMS
## PMS Nacional -------------------
names <- c('date', 'receita', 'volume', 'receita_sa', 'volume_sa')
## Coleta e Tratamento dos Dados --------------------
tabpms = '/t/5906/n1/all/v/7167,7168/p/all/c11046/all/d/v7167%205,v7168%205' %>%
sidrar::get_sidra(api = .) %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(date, "Variável", "Tipos de índice", Valor) %>%
pivot_wider(id_cols = date,
names_from = c("Variável", "Tipos de índice"),
values_from = Valor) %>%
`colnames<-`(names) %>%
dplyr::select(date, receita, receita_sa, volume, volume_sa) %>%
as_tibble()
## Criar métricas --------------
tabpms =
tabpms %>%
mutate(margem_receita = (receita_sa/lag(receita_sa,1)-1)*100) %>%
mutate(margem_volume = (volume_sa/lag(volume_sa,1)-1)*100) %>%
mutate(interanual_receita = (receita/lag(receita,12)-1)*100) %>%
mutate(interanual_volume = (volume/lag(volume,12)-1)*100) %>%
mutate(anual_receita = acum_i(receita,12)) %>%
mutate(anual_volume = acum_i(volume,12))
## Wide para long
tabpms_long =
tabpms %>%
gather(variavel, valor, -date)
# PMS Pernambuco ----------------
tabpms_pe = '/t/5906/n3/26/v/7167,7168/p/all/c11046/all/d/v7167%205,v7168%205' %>%
sidrar::get_sidra(api=.) %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(date, "Variável", "Tipos de índice", Valor) %>%
pivot_wider(id_cols = date,
names_from = c("Variável", "Tipos de índice"),
values_from = Valor) %>%
`colnames<-`(names) %>%
dplyr::select(date, receita, receita_sa, volume, volume_sa) %>%
as_tibble()
## Criar métricas -------------------
tabpms_pe =
tabpms_pe %>%
mutate(margem_receita = (receita_sa/lag(receita_sa,1)-1)*100) %>%
mutate(margem_volume = (volume_sa/lag(volume_sa,1)-1)*100) %>%
mutate(interanual_receita = (receita/lag(receita,12)-1)*100) %>%
mutate(interanual_volume = (volume/lag(volume,12)-1)*100) %>%
mutate(anual_receita = acum_i(receita,12)) %>%
mutate(anual_volume = acum_i(volume,12))
## Wide para long
tabpms_long =
tabpms_pe %>%
gather(variavel, valor, -date)
## Setores PMS de Pernamnuco
## Atividades - Receita (Interanual)
pms_setores_inter_rec = "/t/8693/n3/26/v/11624/p/all/c11046/56725/c12355/all/d/v11624%201" %>%
get_sidra(api=.) %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(date, Valor, "Atividades de serviços") %>%
tidyr::pivot_wider(id_cols = date, names_from = "Atividades de serviços", values_from = Valor) %>%
select(-Total) %>%
drop_na() %>%
as_tibble()
pms_setores_anul_rec = "/t/8693/n3/26/v/11625/p/all/c11046/56725/c12355/all/d/v11625%201" %>%
get_sidra(api=.) %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(date, Valor, "Atividades de serviços") %>%
tidyr::pivot_wider(id_cols = date, names_from = "Atividades de serviços", values_from = Valor) %>%
select(-Total) %>%
drop_na() %>%
as_tibble()
## Atividades -  Volume  (Interanual)
pms_setores_inter_vol = "/t/8693/n3/26/v/11624/p/all/c11046/56726/c12355/all/d/v11624%201" %>%
get_sidra(api=.) %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(date, Valor, "Atividades de serviços") %>%
tidyr::pivot_wider(id_cols = date, names_from = "Atividades de serviços", values_from = Valor) %>%
select(-Total) %>%
drop_na() %>%
as_tibble()
pms_setores_anual_vol = "/t/8693/n3/26/v/11625/p/all/c11046/56726/c12355/all/d/v11625%201" %>%
get_sidra(api=.) %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(date, Valor, "Atividades de serviços") %>%
tidyr::pivot_wider(id_cols = date, names_from = "Atividades de serviços", values_from = Valor) %>%
select(-Total) %>%
drop_na() %>%
as_tibble()
pms_setores_inter_rec_long =
pms_setores_inter_rec %>%
gather(variavel, valor, -date)
# DADOS da PMC
## Coleta e Tratamento dos Dados
ampliado = '/t/8881/n1/all/v/7169,7170/p/all/c11046/all/d/v7169%205,v7170%205' %>%
sidrar::get_sidra(api =.) %>%
mutate(date = parse_date(`Mês (Código)`, format = "%Y%m")) %>%
dplyr::select(`Variável`, date, `Tipos de índice`, Valor) %>%
spread(`Variável`, Valor) %>%
pivot_wider(id_cols = date,
names_from = 'Tipos de índice',
values_from = c('PMC - Número-índice (2022=100)',
'PMC - Número-índice com ajuste sazonal (2022=100)')) %>%
`colnames<-`(names) %>%
dplyr::select(date, receita, receita_sa, volume, volume_sa) %>%
tibble::as_tibble()
## Metricas
ampliado =
ampliado %>%
mutate(margem_receita = (receita_sa/lag(receita_sa,1)-1)*100) %>%
mutate(margem_volume = (volume_sa/lag(volume_sa,1)-1)*100) %>%
mutate(interanual_receita = (receita/lag(receita,12)-1)*100) %>%
mutate(interanual_volume = (volume/lag(volume,12)-1)*100) %>%
mutate(anual_receita = acum_i(receita,12)) %>%
mutate(anual_volume = acum_i(volume,12))
## Transformar de wide para long
ampliado_long =
ampliado %>%
gather(variavel, valor, -date)
## Coleta e Tratamento --------------------------
names <- c('date', 'receita', 'volume', 'receita_sa', 'volume_sa')
restrito_br = '/t/8880/n1/all/v/7169,7170/p/all/c11046/all/d/v7169%205,v7170%205' %>%
sidrar::get_sidra(api=.) %>%
dplyr::mutate(date = parse_date(`Mês (Código)`, format = "%Y%m")) %>%
select(`Variável`, date, `Tipos de índice`, Valor) %>%
spread(`Variável`, Valor) %>%
pivot_wider(id_cols = date,
names_from = 'Tipos de índice',
values_from = c('PMC - Número-índice (2022=100)',
'PMC - Número-índice com ajuste sazonal (2022=100)')) %>%
`colnames<-`(names) %>%
dplyr::select(date, receita, receita_sa, volume, volume_sa)
## Calcular Métricas ---------------------
restrito_br = restrito_br %>%
mutate(margem_receita = (receita_sa/lag(receita_sa,1)-1)*100) %>%
mutate(margem_volume = (volume_sa/lag(volume_sa,1)-1)*100) %>%
mutate(interanual_receita = (receita/lag(receita,12)-1)*100) %>%
mutate(interanual_volume = (volume/lag(volume,12)-1)*100) %>%
mutate(anual_receita = acum_i(receita,12)) %>%
mutate(anual_volume = acum_i(volume,12))
## Formato long
restrito_br_long = restrito_br %>%
gather(variavel, valor, -date)
## Coleta e Tratamento dos Dados ---------------------
ampliado_pe = '/t/8881/n3/26/v/7169,7170/p/all/c11046/all/d/v7169%205,v7170%205' %>%
sidrar::get_sidra(api=.) %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
select(`Variável`, date, `Tipos de índice`, Valor) %>%
spread(`Variável`, Valor) %>%
pivot_wider(id_cols = date,
names_from = 'Tipos de índice',
values_from = c('PMC - Número-índice (2022=100)',
'PMC - Número-índice com ajuste sazonal (2022=100)')) %>%
`colnames<-`(names) %>%
dplyr::select(date, receita, receita_sa, volume, volume_sa) %>%
as_tibble()
## Criar métricas de variação do Comércio ampliado ------------
ampliado_pe =
ampliado_pe %>%
mutate(margem_receita = (receita_sa/lag(receita_sa,1)-1)*100) %>%
mutate(margem_volume = (volume_sa/lag(volume_sa,1)-1)*100) %>%
mutate(interanual_receita = (receita/lag(receita,12)-1)*100) %>%
mutate(interanual_volume = (volume/lag(volume,12)-1)*100) %>%
mutate(anual_receita = acum_i(receita,12)) %>%
mutate(anual_volume = acum_i(volume,12))
## Transformar de wide para long --------------
ampliado_long_pe =
ampliado_pe %>%
gather(variavel, valor, -date)
# Coleta e Tratamento ----------------
restrito_pe = '/t/8880/n3/26/v/7169,7170/p/all/c11046/all/d/v7169%205,v7170%205' %>%
sidrar::get_sidra(api=.) %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(`Variável`, date, `Tipos de índice`, Valor) %>%
spread(`Variável`, Valor) %>%
pivot_wider(id_cols = date,
names_from = 'Tipos de índice',
values_from = c('PMC - Número-índice (2022=100)',
'PMC - Número-índice com ajuste sazonal (2022=100)')) %>%
`colnames<-`(names) %>%
select(date, receita, receita_sa, volume, volume_sa) %>%
as_tibble()
## Metricas -----------------
## Criar métricas de variação do Comércio Restrito
restrito_pe =
restrito_pe %>%
mutate(margem_receita = (receita_sa/lag(receita_sa,1)-1)*100) %>%
mutate(margem_volume = (volume_sa/lag(volume_sa,1)-1)*100) %>%
mutate(interanual_receita = (receita/lag(receita,12)-1)*100) %>%
mutate(interanual_volume = (volume/lag(volume,12)-1)*100) %>%
mutate(anual_receita = acum_i(receita,12)) %>%
mutate(anual_volume = acum_i(volume,12))
## Transformar de wide para long
restrito_long_pe =
restrito_pe %>%
gather(variavel, valor, -date)
# Resultado por setor
## Margem Volume e Receita
margem_setor_receita = '/t/8883/n3/26/v/11709/p/all/c11046/56735/c85/all/d/v11709%201' %>%
sidrar::get_sidra(api=.) %>%
dplyr::mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(date, Valor, Atividades) %>%
drop_na() %>%
dplyr::rename(margem_receita = Valor) %>%
as_tibble()
margem_setor_volume = '/t/8883/n3/26/v/11709/p/all/c11046/56736/c85/all/d/v11709%201' %>%
sidrar::get_sidra(api = .) %>%
dplyr::mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(date, Valor, Atividades) %>%
drop_na() %>%
dplyr::rename(margem_volume = Valor) %>%
as_tibble()
setor_margem = inner_join(margem_setor_receita, margem_setor_volume, by = c("date", "Atividades")) %>%
dplyr::select(date, Atividades, margem_receita, margem_volume)
## Variação Interanual Volume e Receita
interanual_setor_receita = '/t/8883/n3/26/v/11710/p/all/c11046/56735/c85/all/d/v11710%201' %>%
sidrar::get_sidra(api = .)%>%
dplyr::mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(date, Valor, Atividades) %>%
drop_na() %>%
dplyr::rename(interanual_receita = Valor) %>%
as_tibble()
interanual_setor_volume = '/t/8883/n3/26/v/11710/p/all/c11046/56736/c85/all/d/v11710%201' %>%
sidrar::get_sidra(api=.) %>%
dplyr::mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(date, Valor, Atividades) %>%
drop_na() %>%
dplyr::rename(interanual_volume = Valor) %>%
as_tibble()
setor_interanual = inner_join(interanual_setor_receita, interanual_setor_volume, by = c("date", "Atividades")) %>%
dplyr::select(date, Atividades, interanual_receita, interanual_volume)
## Variação Anual Volume e Receita
anual_setor_receita = '/t/8883/n3/26/v/11711/p/all/c11046/56735/c85/all/d/v11711%201' %>%
sidrar::get_sidra(api = .)%>%
dplyr::mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(date, Valor, Atividades) %>%
drop_na() %>%
dplyr::rename(anual_receita = Valor) %>%
as_tibble()
anual_setor_volume = '/t/8883/n3/26/v/11711/p/all/c11046/56736/c85/all/d/v11711%201' %>%
sidrar::get_sidra(api=.) %>%
dplyr::mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(date, Valor, Atividades) %>%
drop_na() %>%
dplyr::rename(anual_volume = Valor) %>%
as_tibble()
setor_anual = inner_join(anual_setor_receita, anual_setor_volume, by = c("date", "Atividades")) %>%
dplyr::select(date, Atividades, anual_receita, anual_volume)
## Visualização dos dados
filter(anual_long, date > '2014 Q1' &
variavel %in% c("Agropecuária - total", "Indústria - total", "Indústrias de transformação", "Eletricidade", "Construção", "Serviços - total", "Comércio", "Transporte, armazenagem e correio")) %>%
ggplot(aes(x=date, y=valor, colour=variavel)) +
geom_line(aes(fill=variavel, colour=variavel), stat='identity') +
scale_fill_manual(values=colours) +
scale_colour_manual(values=colours) +
geom_hline(yintercept=0, colour='black', linetype='dashed') +
facet_wrap(~variavel, scales = 'free') +
theme_excel_new() +
theme(legend.position = 'none',
strip.text = element_text(size=7, face='bold'),
axis.text.x = element_text(size=6),
plot.title = element_text(size=10, face='bold'),
plot.subtitle = element_text(size=8, face='italic')) +
scale_x_yearqtr(breaks = pretty_breaks(n=4), format = "%YQ%q") +
labs(x='', y='',
title='Componentes do PIB',
subtitle = 'Variação Acumulada ao ano (%)',
caption= foot_ibge)
## Visualização dos dados
filter(anual_long, date > '2014 Q1' &
variavel %in% c("Informação e comunicação", "Atividades financeiras, de seguros e serviços relacionados", "Atividades imobiliárias", "Outras atividades de serviços", "Despesa de consumo das famílias", "Exportação de bens e serviços")) %>%
ggplot(aes(x=date, y=valor, colour=variavel)) +
geom_line(aes(fill=variavel, colour=variavel), stat='identity') +
scale_fill_manual(values=colours) +
scale_colour_manual(values=colours) +
geom_hline(yintercept=0, colour='black', linetype='dashed') +
facet_wrap(~variavel, scales = 'free') +
theme_excel_new() +
theme(legend.position = 'none',
strip.text = element_text(size=7, face='bold'),
axis.text.x = element_text(size=6),
plot.title = element_text(size=10, face='bold'),
plot.subtitle = element_text(size=8, face='italic')) +
scale_x_yearqtr(breaks = pretty_breaks(n=4), format = "%YQ%q") +
labs(x='', y='',
title='Componentes do PIB',
subtitle = 'Variação Acumulada ao ano (%)',
caption= foot_ibge)
## Visualização dos dados
dplyr::filter(anual_long, date > '2014 Q1' &
variavel %in% c("Informação e comunicação", "Atividades financeiras, de seguros e serviços relacionados", "Atividades imobiliárias", "Outras atividades de serviços", "Despesa de consumo das famílias", "Exportação de bens e serviços")) %>%
ggplot(aes(x=date, y=valor, colour=variavel)) +
geom_line(aes(fill=variavel, colour=variavel), stat='identity') +
scale_fill_manual(values=colours) +
scale_colour_manual(values=colours) +
geom_hline(yintercept=0, colour='black', linetype='dashed') +
facet_wrap(~variavel, scales = 'free') +
theme_excel_new() +
theme(legend.position = 'none',
strip.text = element_text(size=7, face='bold'),
axis.text.x = element_text(size=6),
plot.title = element_text(size=10, face='bold'),
plot.subtitle = element_text(size=8, face='italic')) +
scale_x_yearqtr(breaks = pretty_breaks(n=4), format = "%YQ%q") +
labs(x='', y='',
title='Componentes do PIB',
subtitle = 'Variação Acumulada ao ano (%)',
caption= foot_ibge)
## Visualização dos dados
filter(anual_long, date > '2014 Q1' &
variavel %in% c("Agropecuária - total", "Indústria - total", "Indústrias de transformação", "Eletricidade", "Construção", "Serviços - total", "Comércio", "Transporte, armazenagem e correio")) %>%
ggplot(aes(x=date, y=valor, colour=variavel)) +
geom_line(aes(fill=variavel, colour=variavel), stat='identity') +
scale_fill_manual(values=colours) +
scale_colour_manual(values=colours) +
geom_hline(yintercept=0, colour='black', linetype='dashed') +
facet_wrap(~variavel, scales = 'free') +
theme_excel_new() +
theme(legend.position = 'none',
strip.text = element_text(size=7, face='bold'),
axis.text.x = element_text(size=6),
plot.title = element_text(size=10, face='bold'),
plot.subtitle = element_text(size=8, face='italic')) +
scale_x_yearqtr(breaks = pretty_breaks(n=4), format = "%YQ%q") +
labs(x='', y='',
title='Componentes do PIB',
subtitle = 'Variação Acumulada ao ano (%)',
caption= foot_ibge)
dplyr::filter(anual_long, date > '2014 Q1' &
variavel %in% c("Informação e comunicação", "Atividades financeiras, de seguros e serviços relacionados", "Atividades imobiliárias", "Outras atividades de serviços", "Despesa de consumo das famílias", "Exportação de bens e serviços")) %>%
ggplot(aes(x=date, y=valor, colour=variavel)) +
geom_line(aes(fill=variavel, colour=variavel), stat='identity')
